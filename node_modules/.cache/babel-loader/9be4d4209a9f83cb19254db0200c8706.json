{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.onClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 4,\n  columnNumber: 24\n}, this);\n\n_c = Button;\n\nconst Statistic = props => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: [props.text, \" \", props.value]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 26\n}, this);\n/* if(good===0 && neutral===0 && bad===0){\n   return(<p>No Feedback Given</p>)\n }\nreturn(<><p>Good {good}</p>\n <p>neutral {neutral}</p>\n <p>Good {bad}</p>\n <p>All {good+neutral+bad}</p>\n <p>Average  {(good-bad)/(good+neutral+bad)}</p>\n <p>Positive  {(good/(good+neutral+bad))*100}%</p></>)*/\n\n\n_c2 = Statistic;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodbutton = () => setGood(good + 1);\n\n  const handleNeutralbutton = () => setNeutral(neutral + 1);\n\n  const handleBadbutton = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      onClick: handleGoodbutton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      onClick: handleNeutralbutton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      onClick: handleBadbutton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/index.js"],"names":["React","useState","ReactDOM","Button","props","onClick","text","Statistic","value","App","good","setGood","neutral","setNeutral","bad","setBad","handleGoodbutton","handleNeutralbutton","handleBadbutton","render","document","getElementById"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAEC,KAAD,iBAAU;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACC,OAAvB;AAAA,YAAiCD,KAAK,CAACE;AAAvC;AAAA;AAAA;AAAA;AAAA,QAAvB;;KAAMH,M;;AAIN,MAAMI,SAAS,GAAEH,KAAD,iBAAS;AAAA,aAAIA,KAAK,CAACE,IAAV,OAAiBF,KAAK,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB;AAE2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;MAVMD,S;;AAYN,MAAME,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACa,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMe,gBAAgB,GAAC,MAAIL,OAAO,CAACD,IAAI,GAAC,CAAN,CAAlC;;AAEA,QAAMO,mBAAmB,GAAC,MAAIJ,UAAU,CAACD,OAAO,GAAC,CAAT,CAAxC;;AAEA,QAAMM,eAAe,GAAC,MAAIH,MAAM,CAACD,GAAG,GAAC,CAAL,CAAhC;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAS,MAAA,IAAI,EAAC,MAAd;AAAyB,MAAA,OAAO,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,SAAd;AAAyB,MAAA,OAAO,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,MAAD;AAAS,MAAA,IAAI,EAAE,KAAf;AAAyB,MAAA,OAAO,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC,MAAjB;AAAwB,MAAA,KAAK,EAAER;AAA/B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvBD;;GAAMD,G;;MAAAA,G;AAyBNP,QAAQ,CAACiB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button=(props)=> <button onClick={props.onClick}>{props.text}</button>\n         \n\n\nconst Statistic=(props)=><p>{props.text} {props.value}</p>\n                                          \n                           /* if(good===0 && neutral===0 && bad===0){\n                              return(<p>No Feedback Given</p>)\n                            }\n                           return(<><p>Good {good}</p>\n                            <p>neutral {neutral}</p>\n                            <p>Good {bad}</p>\n                            <p>All {good+neutral+bad}</p>\n                            <p>Average  {(good-bad)/(good+neutral+bad)}</p>\n                            <p>Positive  {(good/(good+neutral+bad))*100}%</p></>)*/\n\nconst App = () => {\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodbutton=()=>setGood(good+1)\n\n  const handleNeutralbutton=()=>setNeutral(neutral+1)\n\n  const handleBadbutton=()=>setBad(bad+1)\n\n  return (\n    <div>\n      <h1>Give feedback</h1>\n      <Button  text=\"good\"     onClick={handleGoodbutton} />\n      <Button text =\"neutral\"  onClick={handleNeutralbutton} />\n      <Button  text =\"bad\"     onClick={handleBadbutton} />\n      <h2>Statistics</h2>\n      <Statistics text=\"good\" value={good} />\n      \n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}