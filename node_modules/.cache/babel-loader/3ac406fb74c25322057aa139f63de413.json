{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-6/app2-6.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Person from './component/Person';\nimport Filter from './component/Filterform';\nimport Personform from './component/Personform';\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456'\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523'\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345'\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122'\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setFilteredContact] = useState('');\n\n  const handlePersonInput = event => setNewName(event.target.value);\n\n  const handlePersonNumber = event => setNewNumber(event.target.value);\n\n  const handleFiltered = event => setFilteredContact(event.target.value);\n\n  const filteredContact = persons.filter(el => el.name.toUpperCase().includes(newFilter.toUpperCase()));\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (persons.some(el => el.name.toLowerCase() === newName.trim().toLowerCase())) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      const newperson = {\n        name: newName,\n        number: newNumber\n      };\n      setPersons(persons.concat(newperson));\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: newFilter,\n      handleFiltered: handleFiltered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add new contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Personform, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Person, {\n      contact: filteredContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }, this);\n};\n\n_s(App, \"oXn2Fl8tuL1Nwb8VLN6zInMAAx8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-6/app2-6.jsx"],"names":["React","useState","Person","Filter","Personform","App","persons","setPersons","name","number","newName","setNewName","newNumber","setNewNumber","newFilter","setFilteredContact","handlePersonInput","event","target","value","handlePersonNumber","handleFiltered","filteredContact","filter","el","toUpperCase","includes","addPerson","preventDefault","some","toLowerCase","trim","alert","newperson","concat"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,CACvC;AAAEO,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GADuC,EAEvC;AAAED,IAAAA,IAAI,EAAE,cAAR;AAAwBC,IAAAA,MAAM,EAAE;AAAhC,GAFuC,EAGvC;AAAED,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GAHuC,EAIvC;AAAED,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,MAAM,EAAE;AAApC,GAJuC,CAAD,CAAxC;AAMF,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAEW,SAAF,EAAaC,YAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAAEa,SAAF,EAAaC,kBAAb,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMe,iBAAiB,GAAEC,KAAD,IAASN,UAAU,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3C;;AAEA,QAAMC,kBAAkB,GAAEH,KAAD,IAASJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9C;;AAEA,QAAME,cAAc,GAAEJ,KAAD,IAASF,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhD;;AAGA,QAAMG,eAAe,GAAChB,OAAO,CAACiB,MAAR,CAAgBC,EAAD,IAAMA,EAAE,CAAChB,IAAH,CAAQiB,WAAR,GAAsBC,QAAtB,CAA+BZ,SAAS,CAACW,WAAV,EAA/B,CAArB,CAAtB;;AAIA,QAAME,SAAS,GAAEV,KAAD,IAAS;AACTA,IAAAA,KAAK,CAACW,cAAN;;AAEA,QAAItB,OAAO,CAACuB,IAAR,CAAcL,EAAD,IAAMA,EAAE,CAAChB,IAAH,CAAQsB,WAAR,OAAwBpB,OAAO,CAACqB,IAAR,GAAeD,WAAf,EAA3C,CAAJ,EAA+E;AAC3EE,MAAAA,KAAK,CAAE,GAAEtB,OAAQ,gCAAZ,CAAL;AACH,KAFD,MAIG;AACH,YAAMuB,SAAS,GAAC;AAACzB,QAAAA,IAAI,EAACE,OAAN;AAAcD,QAAAA,MAAM,EAACG;AAArB,OAAhB;AACAL,MAAAA,UAAU,CAACD,OAAO,CAAC4B,MAAR,CAAeD,SAAf,CAAD,CAAV;AACAtB,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;AAAC,GAZjB;;AAcC,sBACW;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEE,QAAC,MAAD;AAAS,MAAA,KAAK,EAAEC,SAAhB;AAA2B,MAAA,cAAc,EAAEO;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANA,eAOD,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAPC;AAAA;AAAA;AAAA;AAAA;AAAA,UADX;AAWA,CAjDD;;GAAMjB,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport Person from './component/Person'\nimport Filter from './component/Filterform'\nimport Personform from './component/Personform'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas', number: '040-123456' },\n    { name: 'Ada Lovelace', number: '39-44-5323523' },\n    { name: 'Dan Abramov', number: '12-43-234345' },\n    { name: 'Mary Poppendieck', number: '39-23-6423122' }\n  ]) \nconst [ newName, setNewName ] = useState('')\n\nconst [ newNumber, setNewNumber ] = useState('')\n\nconst [ newFilter, setFilteredContact ] = useState('')\n\nconst handlePersonInput=(event)=>setNewName(event.target.value)\n\nconst handlePersonNumber=(event)=>setNewNumber(event.target.value)\n\nconst handleFiltered=(event)=>setFilteredContact(event.target.value)\n\n \nconst filteredContact=persons.filter((el)=>el.name.toUpperCase().includes(newFilter.toUpperCase()))\n\n\n\nconst addPerson=(event)=>{\n                event.preventDefault()\n               \n                if( persons.some((el)=>el.name.toLowerCase()===newName.trim().toLowerCase()) ) {\n                    alert(`${newName} is already added to phonebook`)\n                } \n\n               else{\n                const newperson={name:newName,number:newNumber}\n                setPersons(persons.concat(newperson))\n                setNewName('') \n                setNewNumber('')\n               }}\n\n return (\n            <div>\n            <h2>Phonebook</h2>\n              <Filter  value={newFilter} handleFiltered={handleFiltered}/>\n            <h1>Add new contact</h1>\n            <Personform />\n           \n            <h2>Numbers</h2>\n           <Person contact={filteredContact} /> \n            </div>\n        )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}