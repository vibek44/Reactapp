{"ast":null,"code":"var _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'; //import Weather from './Weather'\n\nimport Countryinfo from './Countryinfo';\nimport Countrylist from './Countrylist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [searchcountry, setSearch] = useState('');\n  const [weather, setWeather] = useState({});\n  const [capital, setCapital] = useState([]);\n  const filteredCountry = countries.filter(country => country.name.toUpperCase().includes(searchcountry.toUpperCase()));\n  filteredCountry.length === 1 && setCapital(filteredCountry.map(el => el.capital)); //filteredCountry.map((el)=>el.capital)\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => setCountries(response.data));\n  }, []);\n  useEffect(() => {\n    if (filteredCapital[0] !== undefined) {\n      axios.get(`http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${capital[0]}`).then(response => setWeather(response.data));\n    }\n  }, [searchcountry]);\n\n  const handleSearch = e => setSearch(e.target.value);\n\n  const handleShow = e => setSearch(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchcountry,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }, this), filteredCountry.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many matches,specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this) : filteredCountry.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Countryinfo, {\n        filteredCountry: filteredCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Countrylist, {\n      filteredCountry: filteredCountry,\n      handleShow: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"K1sAhrmQUk74j19fKv4m5Ayf9hM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx"],"names":["useState","useEffect","axios","Countryinfo","Countrylist","App","countries","setCountries","searchcountry","setSearch","weather","setWeather","capital","setCapital","filteredCountry","filter","country","name","toUpperCase","includes","length","map","el","get","then","response","data","filteredCapital","undefined","process","env","REACT_APP_API_KEY","handleSearch","e","target","value","handleShow"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AAEV,QAAK,CAACC,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAK,CAACQ,aAAD,EAAeC,SAAf,IAA0BT,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAK,CAACU,OAAD,EAASC,UAAT,IAAqBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAK,CAACY,OAAD,EAAUC,UAAV,IAAsBb,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAMc,eAAe,GAACR,SAAS,CAACS,MAAV,CACJC,OAAD,IAAWA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCX,aAAa,CAACU,WAAd,EAApC,CADN,CAAtB;AAGAJ,EAAAA,eAAe,CAACM,MAAhB,KAAyB,CAAzB,IAA8BP,UAAU,CAACC,eAAe,CAACO,GAAhB,CAAqBC,EAAD,IAAMA,EAAE,CAACV,OAA7B,CAAD,CAAxC,CAbU,CAcV;;AAGAX,EAAAA,SAAS,CAAC,MAAK;AACZC,IAAAA,KAAK,CAACqB,GAAN,CAAW,sCAAX,EACoBC,IADpB,CAC0BC,QAAD,IAAYlB,YAAY,CAACkB,QAAQ,CAACC,IAAV,CADjD;AAEqB,GAHf,EAGgB,EAHhB,CAAT;AAKAzB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAG0B,eAAe,CAAC,CAAD,CAAf,KAAqBC,SAAxB,EAAoC;AACjC1B,MAAAA,KAAK,CAACqB,GAAN,CAAY,iDAAgDM,OAAO,CAACC,GAAR,CAAYC,iBAAkB,MAAKnB,OAAO,CAAC,CAAD,CAAI,EAA1G,EACEY,IADF,CACOC,QAAQ,IAAEd,UAAU,CAACc,QAAQ,CAACC,IAAV,CAD3B;AAGK;AAAG,GALN,EAKO,CAAClB,aAAD,CALP,CAAT;;AAOA,QAAMwB,YAAY,GAAEC,CAAD,IAAKxB,SAAS,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;AAEA,QAAMC,UAAU,GAAGH,CAAD,IAAKxB,SAAS,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC;;AAEA,sBAAO;AAAA,+CACiB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE3B,aAA1B;AAAyC,MAAA,QAAQ,EAAEwB;AAAnD;AAAA;AAAA;AAAA;AAAA,YADjB,EAGKlB,eAAe,CAACM,MAAhB,GAAuB,EAAvB,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,GAEEN,eAAe,CAACM,MAAhB,KAAyB,CAAzB,gBACD;AAAA,6BACA,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEN;AAA9B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADC,gBAMD,QAAC,WAAD;AAAa,MAAA,eAAe,EAAEA,eAA9B;AAA+C,MAAA,UAAU,EAAEsB;AAA3D;AAAA;AAAA;AAAA;AAAA,YAXN;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAgBH,CAjDD;;GAAM/B,G;;KAAAA,G;AAmDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n//import Weather from './Weather'\nimport Countryinfo from './Countryinfo'\nimport Countrylist from './Countrylist'\n\nconst App=()=>{\n    \n    const[countries,setCountries]=useState([])\n\n    const[searchcountry,setSearch]=useState('')\n\n    const[weather,setWeather]=useState({})\n\n    const[capital, setCapital]=useState([])\n\n    const filteredCountry=countries.filter(\n                     (country)=>country.name.toUpperCase().includes(searchcountry.toUpperCase()) ) \n\n    filteredCountry.length===1 && setCapital(filteredCountry.map((el)=>el.capital))\n    //filteredCountry.map((el)=>el.capital)\n\n      \n    useEffect(()=> {\n       axios.get( 'https://restcountries.eu/rest/v2/all')\n                          .then((response)=>setCountries(response.data))\n                           },[])\n \n    useEffect(()=> {\n        if(filteredCapital[0]!==undefined ) {\n           axios.get( `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${capital[0]}`)\n            .then(response=>setWeather(response.data)) \n            \n               }  },[searchcountry]) \n   \n    const handleSearch=(e)=>setSearch(e.target.value)\n     \n    const handleShow =(e)=>setSearch(e.target.value)\n     \n    return(<div>\n             find countries:<input type='text' value={searchcountry} onChange={handleSearch}/>\n            {\n              ( filteredCountry.length>10 ? \n                <p>Too many matches,specify another filter</p>:\n                ( filteredCountry.length===1  ? \n                 <div>\n                 <Countryinfo filteredCountry={filteredCountry} />\n                \n                 {/*<Weather weather={weather}/>  */} \n                 </div> :\n                 <Countrylist filteredCountry={filteredCountry} handleShow={handleShow}/>\n                 )\n              )\n            }\n          </div>)\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}