{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vibek/Desktop/reactapp/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.bad\n  }, void 0, false);\n};\n\n_c = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGoodbutton = () => setGood(good + 1);\n\n  const handleNeutralbutton = () => setNeutral(neutral + 1);\n\n  const handleBadbutton = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodbutton,\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutralbutton,\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBadbutton,\n      children: \" Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"All \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average  \", (good - bad) / (good + neutral + bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Positive  \", good / (good + neutral + bad) * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/reactapp/src/index.js"],"names":["React","useState","ReactDOM","Statistics","props","console","log","bad","App","good","setGood","neutral","setNeutral","setBad","handleGoodbutton","handleNeutralbutton","handleBadbutton","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAU,GAAEC,KAAD,IAAS;AACEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,sBAAO;AAAA,cAAGA,KAAK,CAACG;AAAT,mBAAP;AAAyB,CAFnD;;KAAMJ,U;;AAIN,MAAMK,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACM,GAAD,EAAMM,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMa,gBAAgB,GAAC,MAAIJ,OAAO,CAACD,IAAI,GAAC,CAAN,CAAlC;;AAEA,QAAMM,mBAAmB,GAAC,MAAIH,UAAU,CAACD,OAAO,GAAC,CAAT,CAAxC;;AAEA,QAAMK,eAAe,GAAC,MAAIH,MAAM,CAACN,GAAG,GAAC,CAAL,CAAhC;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEO,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEP,IAAlB;AAAwB,MAAA,GAAG,EAAEF,GAA7B;AAAkC,MAAA,OAAO,EAAEI;AAA3C;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,0BAASF,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,6BAAYE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,0BAASJ,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,yBAAQE,IAAI,GAACE,OAAL,GAAaJ,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,8BAAa,CAACE,IAAI,GAACF,GAAN,KAAYE,IAAI,GAACE,OAAL,GAAaJ,GAAzB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,+BAAeE,IAAI,IAAEA,IAAI,GAACE,OAAL,GAAaJ,GAAf,CAAL,GAA0B,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3BD;;GAAMC,G;;MAAAA,G;AA6BNN,QAAQ,CAACe,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistics=(props)=>{ \n                            console.log(props)\n                          return(<>{props.bad}</>)}\n\nconst App = () => {\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodbutton=()=>setGood(good+1)\n\n  const handleNeutralbutton=()=>setNeutral(neutral+1)\n\n  const handleBadbutton=()=>setBad(bad+1)\n\n  return (\n    <div>\n      <h1>Give feedback</h1>\n      <button onClick={handleGoodbutton}>Good</button>\n      <button onClick={handleNeutralbutton}>Neutral</button>\n      <button onClick={handleBadbutton}> Bad</button>\n      <Statistics good={good} bad={bad} neutral={neutral}/>\n      <p>Good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>Good {bad}</p>\n      <p>All {good+neutral+bad}</p>\n      <p>Average  {(good-bad)/(good+neutral+bad)}</p>\n      <p>Positive  {(good/(good+neutral+bad))*100}%</p>\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}