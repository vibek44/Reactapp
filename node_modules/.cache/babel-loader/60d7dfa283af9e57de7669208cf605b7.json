{"ast":null,"code":"var _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Weather from './Weather';\nimport Countryinfo from './Countryinfo';\nimport Countrylist from './Countrylist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = ({\n  countries\n}) => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [weather, setWeather] = useState({});\n  const [capital, setCapital] = useState([]);\n  const filteredCountry = countries.filter(country => country.name.toUpperCase().includes(search.toUpperCase())); //filteredCountry.length===1&&filteredCountry.map((el)=>el.capital)\n\n  useEffect(() => {\n    if (capital) {\n      axios.get(`http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${capital[0]}`).then(response => console.log(response.data));\n    }\n  }, [capital[0]]);\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n    setCapital(filteredCountry.map(el => el.capital));\n  };\n\n  const handleShow = e => setSearch(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: search,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this), filteredCountry.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many matches,specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : filteredCountry.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Countryinfo, {\n        filteredCountry: filteredCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Countrylist, {\n      filteredCountry: filteredCountry,\n      handleShow: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"K992nvhiAbmZJW2rTzjigCmhIX8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx"],"names":["useState","useEffect","axios","Weather","Countryinfo","Countrylist","App","countries","search","setSearch","weather","setWeather","capital","setCapital","filteredCountry","filter","country","name","toUpperCase","includes","get","process","env","REACT_APP_API_KEY","then","response","console","log","data","handleSearch","e","target","value","map","el","handleShow","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,GAAG,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAErB,QAAK,CAACC,MAAD,EAAQC,SAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAK,CAACU,OAAD,EAASC,UAAT,IAAqBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAK,CAACY,OAAD,EAASC,UAAT,IAAqBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMc,eAAe,GAACP,SAAS,CAACQ,MAAV,CACJC,OAAD,IAAWA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCX,MAAM,CAACU,WAAP,EAApC,CADN,CAAtB,CARqB,CAWrB;;AAEAjB,EAAAA,SAAS,CAAC,MAAK;AACR,QAAGW,OAAH,EAAW;AACXV,MAAAA,KAAK,CAACkB,GAAN,CAAY,iDAAgDC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,MAAKX,OAAO,CAAC,CAAD,CAAI,EAA1G,EACEY,IADF,CACOC,QAAQ,IAAEC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CADjB;AAEL;AAAO,GAJA,EAIC,CAAChB,OAAO,CAAC,CAAD,CAAR,CAJD,CAAT;;AAMA,QAAMiB,YAAY,GAAEC,CAAD,IAAK;AACCrB,IAAAA,SAAS,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACAnB,IAAAA,UAAU,CAACC,eAAe,CAACmB,GAAhB,CAAqBC,EAAD,IAAMA,EAAE,CAACtB,OAA7B,CAAD,CAAV;AACA,GAHzB;;AAKA,QAAMuB,UAAU,GAAGL,CAAD,IAAKrB,SAAS,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC;;AAEA,sBAAO;AAAA,+CACiB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAExB,MAA1B;AAAkC,MAAA,QAAQ,EAAEqB;AAA5C;AAAA;AAAA;AAAA;AAAA,YADjB,EAGKf,eAAe,CAACsB,MAAhB,GAAuB,EAAvB,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,GAEEtB,eAAe,CAACsB,MAAhB,KAAyB,CAAzB,gBACD;AAAA,6BACA,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEtB;AAA9B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADC,gBAKD,QAAC,WAAD;AAAa,MAAA,eAAe,EAAEA,eAA9B;AAA+C,MAAA,UAAU,EAAEqB;AAA3D;AAAA;AAAA;AAAA;AAAA,YAVN;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CAzCD;;GAAM7B,G;;KAAAA,G;AA2CN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Weather from './Weather'\nimport Countryinfo from './Countryinfo'\nimport Countrylist from './Countrylist'\n\nconst App=({countries})=>{\n    \n    const[search,setSearch]=useState('')\n\n    const[weather,setWeather]=useState({})\n\n    const[capital,setCapital]=useState([])\n\n    const filteredCountry=countries.filter(\n                     (country)=>country.name.toUpperCase().includes(search.toUpperCase()) ) \n   \n    //filteredCountry.length===1&&filteredCountry.map((el)=>el.capital)\n\n    useEffect(()=> {\n           if(capital){\n           axios.get( `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${capital[0]}`)\n            .then(response=>console.log(response.data))\n     }      },[capital[0]]) \n   \n    const handleSearch=(e)=>{\n                             setSearch(e.target.value)\n                             setCapital(filteredCountry.map((el)=>el.capital))\n                            }\n     \n    const handleShow =(e)=>setSearch(e.target.value)\n     \n    return(<div>\n             find countries:<input type='text' value={search} onChange={handleSearch}/>\n            {\n              ( filteredCountry.length>10 ? \n                <p>Too many matches,specify another filter</p>:\n                ( filteredCountry.length===1 ? \n                 <div>\n                 <Countryinfo filteredCountry={filteredCountry} />\n                  { /* <Weather weather={weather}/> */}\n                 </div> :\n                 <Countrylist filteredCountry={filteredCountry} handleShow={handleShow}/>\n                 )\n              )\n            }\n          </div>)\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}