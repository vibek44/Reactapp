{"ast":null,"code":"var _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Weather from './Weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [searchcountry, setSearch] = useState('');\n  const [weather, setWeather] = useState({});\n  const filteredCountry = countries.filter(country => country.name.toUpperCase().includes(searchcountry.toUpperCase()));\n  const filteredCapital = filteredCountry.map(el => el.capital);\n  console.log(weather);\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => setCountries(response.data));\n  }, []);\n  useEffect(() => {\n    if (filteredCapital[0] !== undefined) {\n      axios.get(`http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${filteredCapital[0]}`).then(response => setWeather(response.data));\n    }\n  }, [searchcountry]);\n\n  const handleSearch = e => setSearch(e.target.value);\n\n  const handleShow = e => setSearch(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchcountry,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this), filteredCountry.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many matches,specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }, this) : filteredCountry.length === 1 ? filteredCountry.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: el.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital: \", el.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"population: \", el.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Languages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), el.languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: language.name\n      }, language.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: el.flag,\n        alt: \"flag\",\n        width: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this)]\n    }, el.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)) : filteredCountry.map(el => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [el.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShow,\n        value: el.name,\n        children: \"show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this)]\n    }, el.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"vUqKdH4u81NmiEJZdGn9z0uACuA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx"],"names":["useState","useEffect","axios","Weather","App","countries","setCountries","searchcountry","setSearch","weather","setWeather","filteredCountry","filter","country","name","toUpperCase","includes","filteredCapital","map","el","capital","console","log","get","then","response","data","undefined","process","env","REACT_APP_API_KEY","handleSearch","e","target","value","handleShow","length","population","languages","language","flag"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Weather from './Weather'\n\nconst App=()=>{\n    \n    const[countries,setCountries]=useState([])\n\n    const[searchcountry,setSearch]=useState('')\n\n    const[weather,setWeather]=useState({})\n\n    const filteredCountry=countries.filter(\n                     (country)=>country.name.toUpperCase().includes(searchcountry.toUpperCase()) ) \n\n    const  filteredCapital=filteredCountry.map((el)=>el.capital)\n\n    console.log(weather);\n   \n      \n    useEffect(()=> {\n       axios.get( 'https://restcountries.eu/rest/v2/all')\n                          .then((response)=>setCountries(response.data))\n                           },[])\n \n    useEffect(()=> {\n        if(filteredCapital[0]!==undefined) {\n           axios.get( `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${filteredCapital[0]}`)\n            .then(response=>setWeather(response.data))\n               }  },[searchcountry]) \n   \n\n    const handleSearch=(e)=>setSearch(e.target.value)\n     \n    const handleShow =(e)=>setSearch(e.target.value)\n     \n    return(<div>\n     \n        find countries:<input type='text' value={searchcountry} onChange={handleSearch}/>\n        {\n           ( filteredCountry.length>10 ? \n             <p>Too many matches,specify another filter</p>:\n            ( filteredCountry.length===1 ? \n              filteredCountry.map((el)=>\n                <div key={el.name}>\n                  <h1 >{el.name}</h1>\n                  <p>capital: {el.capital}</p>\n                  <p>population: {el.population}</p>\n                  <h2>Languages</h2>\n                  { el.languages.map((language)=>\n                  <li key={language.name}>{language.name}</li>) }\n                  <img src={el.flag} alt='flag' width='100'/>\n                 <Weather weather={weather}/>\n                  </div>) :\n                  filteredCountry.map((el)=>\n                  <div key={el.name}>\n                  {el.name} \n                  <button onClick={handleShow} value={el.name}>show</button>\n                  </div>))\n                  )}\n                </div>)\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}