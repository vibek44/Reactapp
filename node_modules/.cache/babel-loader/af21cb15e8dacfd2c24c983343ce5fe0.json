{"ast":null,"code":"var _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Weather from './Weather';\nimport Countryinfo from './Countryinfo';\nimport Countrylist from './Countrylist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [searchcountry, setSearch] = useState('');\n  const [weather, setWeather] = useState({});\n  const filteredCountry = countries.filter(country => country.name.toUpperCase().includes(searchcountry.toUpperCase()));\n  const filteredCapital = filteredCountry.length === 1 && filteredCountry.map(el => el.capital); //filteredCountry.map((el)=>el.capital)\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => setCountries(response.data));\n  }, []);\n  useEffect(() => {\n    if (filteredCapital[0] !== undefined) {\n      axios.get(`http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${filteredCapital[0]}`).then(response => setWeather(response.data));\n    }\n  }, [searchcountry]);\n\n  const handleSearch = e => setSearch(e.target.value);\n\n  const handleShow = e => setSearch(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchcountry,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this), filteredCountry.length > 10 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many matches,specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : filteredCountry.length === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Countryinfo, {\n        filteredCountry: filteredCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(Countrylist, {\n      filteredCountry: filteredCountry,\n      handleShow: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"vUqKdH4u81NmiEJZdGn9z0uACuA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx"],"names":["useState","useEffect","axios","Weather","Countryinfo","Countrylist","App","countries","setCountries","searchcountry","setSearch","weather","setWeather","filteredCountry","filter","country","name","toUpperCase","includes","filteredCapital","length","map","el","capital","get","then","response","data","undefined","process","env","REACT_APP_API_KEY","handleSearch","e","target","value","handleShow"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AAEV,QAAK,CAACC,SAAD,EAAWC,YAAX,IAAyBR,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAK,CAACS,aAAD,EAAeC,SAAf,IAA0BV,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAK,CAACW,OAAD,EAASC,UAAT,IAAqBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMa,eAAe,GAACN,SAAS,CAACO,MAAV,CACJC,OAAD,IAAWA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCT,aAAa,CAACQ,WAAd,EAApC,CADN,CAAtB;AAGA,QAAOE,eAAe,GAACN,eAAe,CAACO,MAAhB,KAAyB,CAAzB,IAA8BP,eAAe,CAACQ,GAAhB,CAAqBC,EAAD,IAAMA,EAAE,CAACC,OAA7B,CAArD,CAXU,CAYV;;AAGAtB,EAAAA,SAAS,CAAC,MAAK;AACZC,IAAAA,KAAK,CAACsB,GAAN,CAAW,sCAAX,EACoBC,IADpB,CAC0BC,QAAD,IAAYlB,YAAY,CAACkB,QAAQ,CAACC,IAAV,CADjD;AAEqB,GAHf,EAGgB,EAHhB,CAAT;AAKA1B,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGkB,eAAe,CAAC,CAAD,CAAf,KAAqBS,SAAxB,EAAmC;AAChC1B,MAAAA,KAAK,CAACsB,GAAN,CAAY,iDAAgDK,OAAO,CAACC,GAAR,CAAYC,iBAAkB,MAAKZ,eAAe,CAAC,CAAD,CAAI,EAAlH,EACEM,IADF,CACOC,QAAQ,IAAEd,UAAU,CAACc,QAAQ,CAACC,IAAV,CAD3B;AAEK;AAAG,GAJN,EAIO,CAAClB,aAAD,CAJP,CAAT;;AAMA,QAAMuB,YAAY,GAAEC,CAAD,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;AAEA,QAAMC,UAAU,GAAGH,CAAD,IAAKvB,SAAS,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhC;;AAEA,sBAAO;AAAA,+CACiB;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE1B,aAA1B;AAAyC,MAAA,QAAQ,EAAEuB;AAAnD;AAAA;AAAA;AAAA;AAAA,YADjB,EAGKnB,eAAe,CAACO,MAAhB,GAAuB,EAAvB,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,GAEEP,eAAe,CAACO,MAAhB,KAAyB,CAAzB,gBACD;AAAA,8BACA,QAAC,WAAD;AAAa,QAAA,eAAe,EAAEP;AAA9B;AAAA;AAAA;AAAA;AAAA,cADA,eAEC,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAKD,QAAC,WAAD;AAAa,MAAA,eAAe,EAAEE,eAA9B;AAA+C,MAAA,UAAU,EAAEuB;AAA3D;AAAA;AAAA;AAAA;AAAA,YAVN;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAeH,CA7CD;;GAAM9B,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Weather from './Weather'\nimport Countryinfo from './Countryinfo'\nimport Countrylist from './Countrylist'\n\nconst App=()=>{\n    \n    const[countries,setCountries]=useState([])\n\n    const[searchcountry,setSearch]=useState('')\n\n    const[weather,setWeather]=useState({})\n\n    const filteredCountry=countries.filter(\n                     (country)=>country.name.toUpperCase().includes(searchcountry.toUpperCase()) ) \n\n    const  filteredCapital=filteredCountry.length===1 && filteredCountry.map((el)=>el.capital);\n    //filteredCountry.map((el)=>el.capital)\n\n      \n    useEffect(()=> {\n       axios.get( 'https://restcountries.eu/rest/v2/all')\n                          .then((response)=>setCountries(response.data))\n                           },[])\n \n    useEffect(()=> {\n        if(filteredCapital[0]!==undefined) {\n           axios.get( `http://api.weatherapi.com/v1/current.json?key=${process.env.REACT_APP_API_KEY}&q=${filteredCapital[0]}`)\n            .then(response=>setWeather(response.data))\n               }  },[searchcountry]) \n   \n    const handleSearch=(e)=>setSearch(e.target.value)\n     \n    const handleShow =(e)=>setSearch(e.target.value)\n     \n    return(<div>\n             find countries:<input type='text' value={searchcountry} onChange={handleSearch}/>\n            {\n              ( filteredCountry.length>10 ? \n                <p>Too many matches,specify another filter</p>:\n                ( filteredCountry.length===1 ? \n                 <div>\n                 <Countryinfo filteredCountry={filteredCountry} />\n                  <Weather weather={weather}/>\n                 </div> :\n                 <Countrylist filteredCountry={filteredCountry} handleShow={handleShow}/>\n                 )\n              )\n            }\n          </div>)\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}