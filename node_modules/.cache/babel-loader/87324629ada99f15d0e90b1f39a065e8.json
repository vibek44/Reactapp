{"ast":null,"code":"var _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-6/app2-6.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Person from './component/Person';\nimport Filter from './component/Filterform';\nimport Personform from './component/Personform';\nimport personService from './services/person';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setFilteredContact] = useState('');\n  const filteredContact = persons.filter(el => el.name.toUpperCase().includes(newFilter.toUpperCase()));\n  useEffect(() => {\n    personService.getAll().then(initialpersons => setPersons(initialpersons));\n  }, []);\n\n  const handlePersonInput = event => setNewName(event.target.value);\n\n  const handlePersonNumber = event => setNewNumber(event.target.value);\n\n  const handleFiltered = event => setFilteredContact(event.target.value);\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    if (persons.some(el => el.name.toLowerCase() === newName.trim().toLowerCase())) {\n      alert(`${newName} is already added to phonebook,Replace old number with new`);\n      const person = persons.find(el => el.name.toLowerCase() === newName.trim().toLowerCase());\n      const changedperson = { ...person,\n        number: newNumber\n      };\n      axios.put(`http://localhost:3001/persons/${person.id}`, changedperson).then(response => {\n        setPersons(persons.map(el => person.id !== el.id ? el : response.data));\n      });\n    } else {\n      const newperson = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(newperson).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n    }\n  };\n\n  const deletePerson = (id, name) => {\n    window.confirm(`Delete ${name} ?`);\n    personService.remove(id).then(returnedPerson => {\n      setPersons(persons.filter(person => returnedPerson.id !== person.id));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: newFilter,\n      handleFiltered: handleFiltered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add new contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Personform, {\n      addPerson: addPerson,\n      valuename: newName,\n      valuenumber: newNumber,\n      handlePersonInput: handlePersonInput,\n      handlePersonNumber: handlePersonNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), filteredContact.map(person => /*#__PURE__*/_jsxDEV(Person, {\n      person: person,\n      deletePerson: () => deletePerson(person.id, person.name)\n    }, person.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n};\n\n_s(App, \"whL1epwoaXm/wxZki5Y3F7+Agpg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-6/app2-6.jsx"],"names":["React","useState","useEffect","Person","Filter","Personform","personService","axios","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setFilteredContact","filteredContact","filter","el","name","toUpperCase","includes","getAll","then","initialpersons","handlePersonInput","event","target","value","handlePersonNumber","handleFiltered","addPerson","preventDefault","some","toLowerCase","trim","alert","person","find","changedperson","number","put","id","response","map","data","newperson","create","returnedPerson","concat","deletePerson","window","confirm","remove"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAClB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAEU,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAAEY,SAAF,EAAaC,YAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAAEc,SAAF,EAAaC,kBAAb,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMgB,eAAe,GAACR,OAAO,CAACS,MAAR,CAAgBC,EAAD,IAAMA,EAAE,CAACC,IAAH,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BP,SAAS,CAACM,WAAV,EAA/B,CAArB,CAAtB;AAGAnB,EAAAA,SAAS,CAAC,MAAI;AACXI,IAAAA,aAAa,CACZiB,MADD,GAEAC,IAFA,CAEKC,cAAc,IAAEf,UAAU,CAACe,cAAD,CAF/B;AAGF,GAJQ,EAIP,EAJO,CAAT;;AAOA,QAAMC,iBAAiB,GAAEC,KAAD,IAASf,UAAU,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA3C;;AAEA,QAAMC,kBAAkB,GAAEH,KAAD,IAASb,YAAY,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA9C;;AAEA,QAAME,cAAc,GAAEJ,KAAD,IAASX,kBAAkB,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhD;;AAGA,QAAMG,SAAS,GAAEL,KAAD,IAAS;AACTA,IAAAA,KAAK,CAACM,cAAN;;AAEA,QAAIxB,OAAO,CAACyB,IAAR,CAAcf,EAAD,IAAMA,EAAE,CAACC,IAAH,CAAQe,WAAR,OAAwBxB,OAAO,CAACyB,IAAR,GAAeD,WAAf,EAA3C,CAAJ,EAA+E;AAC3EE,MAAAA,KAAK,CAAE,GAAE1B,OAAQ,4DAAZ,CAAL;AACA,YAAM2B,MAAM,GAAC7B,OAAO,CAAC8B,IAAR,CAAcpB,EAAD,IAAMA,EAAE,CAACC,IAAH,CAAQe,WAAR,OAAwBxB,OAAO,CAACyB,IAAR,GAAeD,WAAf,EAA3C,CAAb;AACA,YAAMK,aAAa,GAAC,EAAC,GAAGF,MAAJ;AAAWG,QAAAA,MAAM,EAAC5B;AAAlB,OAApB;AAEAN,MAAAA,KAAK,CAACmC,GAAN,CAAW,iCAAgCJ,MAAM,CAACK,EAAG,EAArD,EAAuDH,aAAvD,EACChB,IADD,CACMoB,QAAQ,IAAE;AACdlC,QAAAA,UAAU,CAACD,OAAO,CAACoC,GAAR,CAAa1B,EAAD,IAAMmB,MAAM,CAACK,EAAP,KAAYxB,EAAE,CAACwB,EAAf,GAAoBxB,EAApB,GAAuByB,QAAQ,CAACE,IAAlD,CAAD,CAAV;AACD,OAHD;AAKH,KAVD,MAWI;AACJ,YAAMC,SAAS,GAAC;AAAC3B,QAAAA,IAAI,EAACT,OAAN;AAAc8B,QAAAA,MAAM,EAAC5B;AAArB,OAAhB;AACAP,MAAAA,aAAa,CACZ0C,MADD,CACQD,SADR,EAECvB,IAFD,CAEMyB,cAAc,IAAE;AACpBvC,QAAAA,UAAU,CAACD,OAAO,CAACyC,MAAR,CAAeD,cAAf,CAAD,CAAV;AACArC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,OAND;AAMG;AAAC,GAtBpB;;AAwBC,QAAMqC,YAAY,GAAC,CAACR,EAAD,EAAIvB,IAAJ,KAAW;AACfgC,IAAAA,MAAM,CAACC,OAAP,CAAgB,UAASjC,IAAK,IAA9B;AACAd,IAAAA,aAAa,CACZgD,MADD,CACQX,EADR,EAECnB,IAFD,CAEMyB,cAAc,IAAE;AACpBvC,MAAAA,UAAU,CAACD,OAAO,CAACS,MAAR,CAAgBoB,MAAD,IAAUW,cAAc,CAACN,EAAf,KAAoBL,MAAM,CAACK,EAApD,CAAD,CAAV;AACD,KAJD;AAMC,GARhB;;AAUA,sBACW;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,MAAD;AAAS,MAAA,KAAK,EAAE5B,SAAhB;AAA2B,MAAA,cAAc,EAAEgB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEC,SAAvB;AACE,MAAA,SAAS,EAAErB,OADb;AAEE,MAAA,WAAW,EAAEE,SAFf;AAGE,MAAA,iBAAiB,EAAEa,iBAHrB;AAIE,MAAA,kBAAkB,EAAEI;AAJtB;AAAA;AAAA;AAAA;AAAA,YAJA,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA,EAWAb,eAAe,CAAC4B,GAAhB,CAAqBP,MAAD,iBACrB,QAAC,MAAD;AACC,MAAA,MAAM,EAAEA,MADT;AAEC,MAAA,YAAY,EAAE,MAAIa,YAAY,CAACb,MAAM,CAACK,EAAR,EAAWL,MAAM,CAAClB,IAAlB;AAF/B,OAAakB,MAAM,CAACK,EAApB;AAAA;AAAA;AAAA;AAAA,YADC,CAXA;AAAA;AAAA;AAAA;AAAA;AAAA,UADX;AAmBA,CA/ED;;GAAMnC,G;;KAAAA,G;AAiFN,eAAeA,GAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport Person from './component/Person'\nimport Filter from './component/Filterform'\nimport Personform from './component/Personform'\nimport personService from './services/person'\nimport axios from 'axios'\n\n\n\nconst App = () => {\nconst [ persons, setPersons ] = useState([]) \n\nconst [ newName, setNewName ] = useState('')\n\nconst [ newNumber, setNewNumber ] = useState('')\n\nconst [ newFilter, setFilteredContact ] = useState('')\n\nconst filteredContact=persons.filter((el)=>el.name.toUpperCase().includes(newFilter.toUpperCase()))\n\n\nuseEffect(()=>{\n   personService\n   .getAll()\n  .then(initialpersons=>setPersons(initialpersons))\n},[]) \n\n\nconst handlePersonInput=(event)=>setNewName(event.target.value)\n\nconst handlePersonNumber=(event)=>setNewNumber(event.target.value)\n\nconst handleFiltered=(event)=>setFilteredContact(event.target.value)\n\n \nconst addPerson=(event)=>{\n                event.preventDefault()\n               \n                if( persons.some((el)=>el.name.toLowerCase()===newName.trim().toLowerCase()) ) {\n                    alert(`${newName} is already added to phonebook,Replace old number with new`)\n                    const person=persons.find((el)=>el.name.toLowerCase()===newName.trim().toLowerCase())\n                    const changedperson={...person,number:newNumber}\n                    \n                    axios.put(`http://localhost:3001/persons/${person.id}`,changedperson)\n                    .then(response=>{\n                      setPersons(persons.map((el)=>person.id!==el.id ? el:response.data))\n                    })\n\n                } \n                else{\n                const newperson={name:newName,number:newNumber}\n                personService\n                .create(newperson)\n                .then(returnedPerson=>{\n                  setPersons(persons.concat(returnedPerson))\n                  setNewName('') \n                  setNewNumber('')\n                })}}\n\n const deletePerson=(id,name)=>{\n                window.confirm(`Delete ${name} ?`)\n                personService\n                .remove(id)\n                .then(returnedPerson=>{\n                  setPersons(persons.filter((person)=>returnedPerson.id!==person.id))\n                })\n                \n                }\n\n return (\n            <div>\n            <h2>Phonebook</h2>\n            <Filter  value={newFilter} handleFiltered={handleFiltered}/>\n            <h1>Add new contact</h1>\n            <Personform addPerson={addPerson} \n              valuename={newName}\n              valuenumber={newNumber}\n              handlePersonInput={handlePersonInput}\n              handlePersonNumber={handlePersonNumber} />\n           \n            <h2>Numbers</h2>\n           {filteredContact.map((person)=>\n           <Person key={person.id} \n            person={person} \n            deletePerson={()=>deletePerson(person.id,person.name)} /> )}\n           \n            </div>\n        )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}