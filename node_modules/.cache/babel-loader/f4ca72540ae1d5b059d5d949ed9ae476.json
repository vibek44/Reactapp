{"ast":null,"code":"var _jsxFileName = \"/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => setCountries(response.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: countries.map(country => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: country.altSpellings\n    }, country.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 38\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"4Do+av5tq2TFSYLV2gLznzNRrnw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vibek/Desktop/Reactapp/src/course/part2/exercise2-11/app2-11.jsx"],"names":["useState","useEffect","axios","App","countries","setCountries","get","then","response","data","map","country","altSpellings","name"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AAEV,QAAK,CAACC,SAAD,EAAWC,YAAX,IAAyBL,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACZC,IAAAA,KAAK,CAACI,GAAN,CAAW,sCAAX,EACoBC,IADpB,CAC0BC,QAAD,IAAYH,YAAY,CAACG,QAAQ,CAACC,IAAV,CADjD;AAEF,GAHQ,EAGP,EAHO,CAAT;AAKA,sBAAO;AAAA,cAECL,SAAS,CAACM,GAAV,CAAeC,OAAD,iBAAW;AAAA,gBAAwBA,OAAO,CAACC;AAAhC,OAASD,OAAO,CAACE,IAAjB;AAAA;AAAA;AAAA;AAAA,YAAzB;AAFD;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAfD;;GAAMV,G;;KAAAA,G;AAiBN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App=()=>{\n\n    const[countries,setCountries]=useState([])\n    \n    useEffect(()=> {\n       axios.get( 'https://restcountries.eu/rest/v2/all')\n                          .then((response)=>setCountries(response.data) )\n    },[])\n     \n    return(<div>\n        {\n            countries.map((country)=><p key ={country.name}>{country.altSpellings}</p>)\n        }\n           \n    </div>)\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}